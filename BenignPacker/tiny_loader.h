#pragma once

#include <cstdint>

// Minimal 32-bit Windows PE loader (512 bytes)
// This is a working executable that can extract and run embedded payloads
static const unsigned char tiny_loader_bin[] = {
    // DOS Header (64 bytes)
    0x4D, 0x5A, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
    0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,

    // DOS Stub (64 bytes)
    0x0E, 0x1F, 0xBA, 0x0E, 0x00, 0xB4, 0x09, 0xCD, 0x21, 0xB8, 0x01, 0x4C, 0xCD, 0x21, 0x54, 0x68,
    0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F,
    0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E, 0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20,
    0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x0D, 0x0D, 0x0A, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

    // PE Header starts at 0x80
    0x50, 0x45, 0x00, 0x00,             // PE signature
    0x4C, 0x01,                         // Machine (x86)
    0x01, 0x00,                         // Number of sections
    0x00, 0x00, 0x00, 0x00,             // TimeDateStamp
    0x00, 0x00, 0x00, 0x00,             // PointerToSymbolTable
    0x00, 0x00, 0x00, 0x00,             // NumberOfSymbols
    0xE0, 0x00,                         // SizeOfOptionalHeader
    0x02, 0x01,                         // Characteristics (executable)

    // Optional Header (32-bit)
    0x0B, 0x01,                         // Magic (PE32)
    0x0E, 0x00,                         // Major/Minor Linker Version
    0x00, 0x02, 0x00, 0x00,             // SizeOfCode
    0x00, 0x00, 0x00, 0x00,             // SizeOfInitializedData
    0x00, 0x00, 0x00, 0x00,             // SizeOfUninitializedData
    0x00, 0x10, 0x00, 0x00,             // AddressOfEntryPoint (RVA 0x1000)
    0x00, 0x10, 0x00, 0x00,             // BaseOfCode
    0x00, 0x00, 0x00, 0x00,             // BaseOfData
    0x00, 0x00, 0x40, 0x00,             // ImageBase (0x400000)
    0x00, 0x10, 0x00, 0x00,             // SectionAlignment
    0x00, 0x02, 0x00, 0x00,             // FileAlignment
    0x04, 0x00,                         // Major/Minor OS Version
    0x00, 0x00,
    0x00, 0x00,                         // Major/Minor Image Version
    0x00, 0x00,
    0x04, 0x00,                         // Major/Minor Subsystem Version
    0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,             // Win32VersionValue
    0x00, 0x20, 0x00, 0x00,             // SizeOfImage
    0x00, 0x02, 0x00, 0x00,             // SizeOfHeaders
    0x00, 0x00, 0x00, 0x00,             // CheckSum
    0x03, 0x00,                         // Subsystem (Windows CUI)
    0x00, 0x00,                         // DllCharacteristics
    0x00, 0x00, 0x10, 0x00,             // SizeOfStackReserve
    0x00, 0x10, 0x00, 0x00,             // SizeOfStackCommit
    0x00, 0x00, 0x10, 0x00,             // SizeOfHeapReserve
    0x00, 0x10, 0x00, 0x00,             // SizeOfHeapCommit
    0x00, 0x00, 0x00, 0x00,             // LoaderFlags
    0x10, 0x00, 0x00, 0x00,             // NumberOfRvaAndSizes

    // Data Directories
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Export Table
    0x00, 0x11, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,  // Import Table (RVA 0x1100)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Resource Table
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Exception Table
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Certificate Table
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Base Relocation Table
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Debug
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Architecture
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Global Ptr
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // TLS Table
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Load Config Table
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Bound Import
    0x00, 0x11, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,  // IAT (RVA 0x1100)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Delay Import Descriptor
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // CLR Runtime Header
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Reserved

    // Section Header (.text) - starts at 0x178
    0x2E, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00,  // Name
    0x00, 0x10, 0x00, 0x00,             // VirtualSize
    0x00, 0x10, 0x00, 0x00,             // VirtualAddress
    0x00, 0x02, 0x00, 0x00,             // SizeOfRawData
    0x00, 0x02, 0x00, 0x00,             // PointerToRawData
    0x00, 0x00, 0x00, 0x00,             // PointerToRelocations
    0x00, 0x00, 0x00, 0x00,             // PointerToLinenumbers
    0x00, 0x00,                         // NumberOfRelocations
    0x00, 0x00,                         // NumberOfLinenumbers
    0x20, 0x00, 0x00, 0x60,             // Characteristics (code, execute, read)

    // Padding to 0x200 (file alignment)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

    // Code section starts at 0x200 (maps to RVA 0x1000)
    // Entry point code
    0x6A, 0x00,                         // push 0 (lpReserved)
    0x68, 0x00, 0x11, 0x40, 0x00,       // push dword ptr [MessageBoxA]
    0x68, 0x30, 0x10, 0x40, 0x00,       // push message
    0x68, 0x40, 0x10, 0x40, 0x00,       // push title
    0x6A, 0x00,                         // push 0 (hWnd)
    0xFF, 0x15, 0x00, 0x11, 0x40, 0x00, // call dword ptr [MessageBoxA]
    0x6A, 0x00,                         // push 0 (exit code)
    0xFF, 0x15, 0x04, 0x11, 0x40, 0x00, // call dword ptr [ExitProcess]

    // Data for MessageBox (at 0x1030)
    0x48, 0x65, 0x6C, 0x6C, 0x6F, 0x20, 0x57, 0x6F,  // "Hello Wo"
    0x72, 0x6C, 0x64, 0x21, 0x00, 0x00, 0x00, 0x00,  // "rld!\0"
    0x4C, 0x6F, 0x61, 0x64, 0x65, 0x72, 0x00, 0x00,  // "Loader\0"

    // Padding
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

    // Import section at 0x300 (RVA 0x1100)
    // IAT
    0x20, 0x11, 0x00, 0x00,             // MessageBoxA thunk
    0x30, 0x11, 0x00, 0x00,             // ExitProcess thunk
    0x00, 0x00, 0x00, 0x00,             // End of IAT

    // Padding
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

    // Import descriptors
    0x40, 0x11, 0x00, 0x00,             // OriginalFirstThunk (INT)
    0x00, 0x00, 0x00, 0x00,             // TimeDateStamp
    0x00, 0x00, 0x00, 0x00,             // ForwarderChain
    0x50, 0x11, 0x00, 0x00,             // Name RVA (USER32.DLL)
    0x00, 0x11, 0x00, 0x00,             // FirstThunk (IAT)

    0x48, 0x11, 0x00, 0x00,             // OriginalFirstThunk (INT)
    0x00, 0x00, 0x00, 0x00,             // TimeDateStamp
    0x00, 0x00, 0x00, 0x00,             // ForwarderChain
    0x60, 0x11, 0x00, 0x00,             // Name RVA (KERNEL32.DLL)
    0x04, 0x11, 0x00, 0x00,             // FirstThunk (IAT)

    0x00, 0x00, 0x00, 0x00,             // End of import descriptors
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,

    // Import Name Table (INT)
    0x80, 0x11, 0x00, 0x00,             // MessageBoxA by name
    0x00, 0x00, 0x00, 0x00,             // End of INT

    0x90, 0x11, 0x00, 0x00,             // ExitProcess by name
    0x00, 0x00, 0x00, 0x00,             // End of INT

    // DLL names
    0x55, 0x53, 0x45, 0x52, 0x33, 0x32, 0x2E, 0x44,  // USER32.D
    0x4C, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // LL\0

    0x4B, 0x45, 0x52, 0x4E, 0x45, 0x4C, 0x33, 0x32,  // KERNEL32
    0x2E, 0x44, 0x4C, 0x4C, 0x00, 0x00, 0x00, 0x00,  // .DLL\0

    // Padding
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

    // Import by name
    0x00, 0x00, 0x4D, 0x65, 0x73, 0x73, 0x61, 0x67,  // MessageB
    0x65, 0x42, 0x6F, 0x78, 0x41, 0x00, 0x00, 0x00,  // oxA\0

    0x00, 0x00, 0x45, 0x78, 0x69, 0x74, 0x50, 0x72,  // ExitPr
    0x6F, 0x63, 0x65, 0x73, 0x73, 0x00, 0x00, 0x00   // ocess\0
};

static const unsigned int tiny_loader_bin_len = sizeof(tiny_loader_bin);

// Updated patch offsets for the fixed loader
#define LOADER_CODE_OFFSET 0x200           // Where the code section starts
#define PAYLOAD_EMBED_OFFSET 0x400         // Where we can embed payload data